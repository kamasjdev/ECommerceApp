@model ECommerceApp.Application.ViewModels.Item.NewItemVm

@{
    ViewData["Title"] = "AddItem";
}

<h1>AddItem</h1>

<h4>NewItemVm</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddItem">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" class="form-control" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cost" class="control-label"></label>
                <input asp-for="Cost" class="form-control" />
                <span asp-validation-for="Cost" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Warranty" class="control-label"></label>
                <input asp-for="Warranty" class="form-control" />
                <span asp-validation-for="Warranty" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group col">
                <label asp-for="BrandId" class="control-label">Firma: </label>
                <select asp-for="BrandId" asp-items="@(new SelectList(ViewBag.ItemBrands,"Id", "Name"))" class="custom-select"></select>
                <span asp-validation-for="BrandId" class="text-danger"></span>
            </div>
            <p>
                <a asp-action="AddItemBrand">Dodaj nową firmę</a>
            </p>
            <div class="form-group col">
                <label asp-for="TypeId" class="control-label">Typ: </label>
                <select asp-for="TypeId" asp-items="@(new SelectList(ViewBag.ItemTypes,"Id", "Name"))" class="custom-select"></select>
                <span asp-validation-for="TypeId" class="text-danger"></span>
            </div>
            <p>
                <a asp-action="AddItemType">Dodaj nowy typ</a>
            </p>
            <!--NOWY TAG-->
            <table id="tagWithJS">
                <thead>
                    <tr>
                        Tag:
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.ItemTags.Count; i++)
                    {
                        <tr class="row" id="@i">
                            <td>
                                <label asp-for="ItemTags[i].TagId" class="control-label"></label>
                                <select id="ItemTagsMain" asp-for="ItemTags[i].TagId" asp-items="@(new SelectList(ViewBag.ItemTags,"Id", "Name"))" class="custom-select"></select>
                                <span asp-validation-for="ItemTags[i].TagId" class="text-danger"></span>
                                <input type="hidden" asp-for="ItemTags[i].ItemId" class="form-control" value="@Model.Id" />
                            </td>
                            <td>
                                <button type="button" class="btn delete">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <!--table>
                <tr class="row" id="ChooseItemTag">
                    <td>
                        <select id="ItemTags" name="ItemTags[#].TagId" asp-items="@(new SelectList(ViewBag.ItemTags,"Id", "Name"))" class="custom-select" data-val="true" value=""></select>
                        <input type="hidden" name="ItemTags[#].ItemId" class="form-control" value="@Model.Id" />
                    </td>
                </tr>
            </table-->
            <div>
                <button type="button" id="add" class="btn btn-info">Dodaj Tag</button>
                <input id="indexer" type="hidden" value="0" />
            </div>
            <table id="newrow" style="display:none;">
                <tr class="row" id="%">
                    <td>
                        <select id="ItemTagsMain" style="display:none;" asp-items="@(new SelectList(ViewBag.ItemTags,"Id", "Name"))" class="custom-select"></select>
                        <select id="ItemTags" name="ItemTags[#].TagId" asp-items="@(new SelectList(ViewBag.ItemTags,"Id", "Name"))" class="custom-select" data-val="true" value="wartosc"></select>
                        <!--label id="ItemTags" name="ItemTags[#].TagId" class="custom-select" data-val="true" value="wartosc"></!--label>
                        <p id="jsInjectValue"></p-->
                        <input type="hidden" name="ItemTags[#].ItemId" class="form-control" value="@Model.Id" />
                    </td>
                    <td id="buttonDelete">
                        <button type="button" class="btn delete">Delete</button>
                    </td>
                </tr>
            </table>
            <!--NOWY TAG -->
            <p>
                <a asp-action="AddItemTag">Dodaj nowy tag</a>
            </p>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Wróć do listy przedmiotów</a>
</div>


@section Scripts {

    <script type="text/javascript">
        var form = $('form');
        var table = $('#tagWithJS tbody');
        var newrow = $('#newrow');
        let index = document.getElementById("indexer").value;
        var elementOfItemTag = document.getElementById("ItemTags");
        var selectedIndexItemTags = 0;
        var copyOfItemTags = elementOfItemTag;
        var selectedIndex;
        var selectedValue;
        var selectedTableRowInTags;
        var dictOfDeletedValues = {};
        var listIdTags = [];

        $('#add').click(function () {
            if (index > 0 && selectedIndex > -1) {
                var standardValue = copyOfItemTags.attributes.value.ownerElement.children[selectedIndex].value;
                dictOfDeletedValues[index - 1] = selectedValue;
                copyOfItemTags.remove(selectedIndex);
            }

            selectedIndex = copyOfItemTags.options[copyOfItemTags.selectedIndex].index;
            selectedValue = copyOfItemTags.options[copyOfItemTags.selectedIndex].value;
            selectedText = copyOfItemTags.options[copyOfItemTags.selectedIndex].text;
            var valueOfItemTag = selectedValue;
            var cloneTableRow = newrow.find('tr').clone();

            cloneTableRow.attr('id', index);
            cloneTableRow.attr("id", index).find("#ItemTags").attr("id", "ItemTags" + index);
            cloneTableRow.html($(cloneTableRow).html().replace(/\[#\]/g, '[' + index + ']'));
            cloneTableRow.html($(cloneTableRow).html().replace(/"%"/g, '"' + index + '"'));
            cloneTableRow.html($(cloneTableRow).html().replace(/"wartosc"/g, '"' + valueOfItemTag + '"'));
            table.append(cloneTableRow);
            form.data('validator', null);
            index = parseInt(index) + 1; 
            $.validator.unobtrusive.parse(form);
        });

        $(document).on('change', 'select', function () {
            selectedIndex = (this).index;
            selectedValue = (this).value;
        });

        $('#tagWithJS').on('change', function () {
            selectedIndexItemTags = $('#ItemTags')[0].selectedIndex;
        });

        $('#tagWithJS').click('tbody tr', function (event) {
            if (event.target.hasAttribute("name")) {
                selectedTableRowInTags = event.target.name.replace("ItemTags[", "").replace("].TagId", "");
            }
        });

        $('#tagWithJS').on('click', '.delete', function () {
            var allValues = document.getElementById('ItemTagsMain');
            selectedTableRowInTags = (this).parentNode.parentNode.attributes.id.value;
            var assignedValues = [];

            if ($('#tagWithJS tbody tr').length > 0) {
                $("#tagWithJS tbody tr").each(function () {
                    if (this.id) {
                        listIdTags.push(this.id);
                    }
                });
            }

            $(this).closest('tr').remove();
            var id = $(this).closest('tr').attr("id");

            var collectionValues = $('#tagWithJS tbody')[0].children;
            for (i = 0; i < collectionValues.length; i++) { 
                assignedValues[i] = collectionValues[i].children[0].children[1].value;
            }

            listIdTags.splice(id, 1);
            var listIdTagsNotChanged = listIdTags.map((x) => x); // clone array
            Update(listIdTags);

            var allValues = document.getElementById('ItemTagsMain');
            $('#ItemTags').empty();

            for (i = 0; i < allValues.length; i++) {
                $('#ItemTags')
                    .append($("<option></option>").attr("value", allValues[i].value).text(allValues[i].text));
            }
            //-------------------------CREATE NEW TABLE ROWS-----------------------------------------
            $('#tagWithJS tbody').empty();

            for (i = 0; i < listIdTags.length; i++) {
                var cloneTableRow = newrow.find('tr').clone();
                cloneTableRow.attr('id', listIdTags[i]);
                cloneTableRow.attr("id", listIdTags[i]).find("#ItemTags").attr("id", "ItemTags" + listIdTags[i]);
                cloneTableRow.html($(cloneTableRow).html().replace(/\[#\]/g, '[' + listIdTags[i] + ']'));
                cloneTableRow.html($(cloneTableRow).html().replace(/"%"/g, '"' + listIdTags[i] + '"'));
                cloneTableRow.html($(cloneTableRow).html().replace(/"wartosc"/g, '"' + 4 + '"'));
                table.append(cloneTableRow);
                $("select#ItemTags" + listIdTags[i]).prop('selectedIndex', listIdTagsNotChanged[i]);
            }
            //-------------------------CREATE NEW TABLE ROWS-----------------------------------------

            //----------------------DELETE CHOSEN OPTIONS--------------------
            copyOfItemTags = document.getElementById("ItemTags");
            for (i = 0; i < assignedValues.length - 1; i++) {
                removeSelectOption(assignedValues[i], copyOfItemTags);
            }
            //----------------------DELETE CHOSEN OPTIONS--------------------
            index = listIdTags.length;
            console.log("index=" + index);
            listIdTags = [];
        });

        function Update(listIdTags) {
            for (j = 0; j < listIdTags.length; j++) {
                if (listIdTags[j] != j) {
                    this.listIdTags[j] = j;
                }
            }
        }

        function removeSelectOption(valueToDelete, selectList) {
            for (var i = selectList.length - 1; i >= 0; i--) {
                if (selectList.options[i].value == valueToDelete){
                    selectList.remove(i);
                    console.log(" selectList.options[i].value == valueToDelete.value");
                    console.log(valueToDelete.value);
                }
                console.log("loop in RemoveSelectOption");
            }
        }

    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
